{
    "openapi": "3.0.0",
    "info": {
        "version": "2.0.1",
        "title": "Storecove API",
        "description": "Storecove API",
        "termsOfService": "http:\/\/exmple.com\/license\/"
    },
    "servers": [
        "httpsapi.storecove.com\/api\/v2"
    ],
    "paths": {
        "\/shops": {
            "get": {
                "summary": "Get Shops",
                "description": "Get all available shops.\ninclude::examples\/shops\/shops_index\/tabs.adoc[]",
                "operationId": "ShopsIndex",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "cc",
                        "in": "query",
                        "description": "Include creditcards in list. Add ?cc=true to URL to use."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ShopAccountResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop_accounts": {
            "get": {
                "summary": "Get ShopAccounts for an entity",
                "description": "Retrieve all active ShopAccounts for one of your entities.\ninclude::examples\/shop_accounts\/shop_accounts_index\/tabs.adoc[]",
                "operationId": "ShopAccountsIndex",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "external_user_id",
                        "in": "query",
                        "description": "Filter by the external_user_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ShopAccountResult"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create ShopAccount",
                "description": "Create a new ShopAccount.\ninclude::examples\/shop_accounts\/create_shop_account\/tabs.adoc[]",
                "operationId": "CreateShopAccount",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ShopAccountResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop_accounts\/auth_failures": {
            "get": {
                "summary": "Get ShopAccounts with authorization failures",
                "description": "Get ShopAccounts with authorization failures.\ninclude::examples\/shop_accounts\/shop_accounts_auth_failures\/tabs.adoc[]",
                "operationId": "ShopAccountsAuthFailures",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ShopAccountResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop_accounts\/{id}": {
            "get": {
                "summary": "Get ShopAccount",
                "description": "Get a specific ShopAccount.\ninclude::examples\/shop_accounts\/get_shop_account\/tabs.adoc[]",
                "operationId": "GetShopAccount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "shop_account id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ShopAccountResult"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete ShopAccount",
                "description": "Delete a specific ShopAccount.\ninclude::examples\/shop_accounts\/delete_shop_account\/tabs.adoc[]",
                "operationId": "DeleteShopAccount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "shop_account id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "patch": {
                "summary": "Update ShopAccount",
                "description": "Update a specific ShopAccount.\ninclude::examples\/shop_accounts\/update_shop_account\/tabs.adoc[]",
                "operationId": "UpdateShopAccount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "shop_account id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ShopAccountResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop_account_requests": {
            "get": {
                "summary": "Get ShopAccountRequests",
                "description": "Retrieve all active ShopAccountRequests for one of your entities.\ninclude::examples\/shop_account_requests\/shop_account_requests_index\/tabs.adoc[]",
                "operationId": "ShopAccountRequestsIndex",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "external_user_id",
                        "in": "query",
                        "description": "Filter by the external_user_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ShopAccountResult"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create ShopAccountRequest",
                "description": "Create a new ShopAccountRequest\ninclude::examples\/shop_account_requests\/create_shop_account_request\/tabs.adoc[]",
                "operationId": "CreateShopAccountRequest",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ShopAccountResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/shop_account_requests\/{id}": {
            "get": {
                "summary": "Get ShopAccountRequest",
                "description": "Show a specific ShopAccountRequest\ninclude::examples\/shop_account_requests\/get_shop_account_request\/tabs.adoc[]",
                "operationId": "GetShopAccountRequest",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "shop_account id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ShopAccountResult"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete ShopAccountRequest",
                "description": "Delete a specific ShopAccountRequest\ninclude::examples\/shop_account_requests\/delete_shop_account_request\/tabs.adoc[]",
                "operationId": "DeleteShopAccountRequest",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "shop_account id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "patch": {
                "summary": "Update ShopAccountRequest",
                "description": "Update a specific ShopAccountRequest\ninclude::examples\/shop_account_requests\/update_shop_account_request\/tabs.adoc[]",
                "operationId": "UpdateShopAccountRequest",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "shop_account id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ShopAccountResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/invoice_submissions": {
            "post": {
                "summary": "Submit a new invoice",
                "description": "Submit an invoice for delivery.\ninclude::examples\/invoice_submissions\/create_invoice_submission\/tabs.adoc[]",
                "operationId": "CreateInvoiceSubmission",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ShopAccountResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/invoice_submissions\/preflight": {
            "post": {
                "summary": "Preflight an invoice recipient",
                "description": "Check whether Storecove can deliver an invoice for a list of ids.\ninclude::examples\/invoice_submissions\/preflight_invoice_recipient\/tabs.adoc[]",
                "operationId": "PreflightInvoiceRecipient",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ShopAccountResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/legal_entities": {
            "post": {
                "summary": "Create a new LegalEntity",
                "description": "Create a new LegalEntity.",
                "operationId": "CreateLegalEntity",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "\/legal_entities\/{id}": {
            "get": {
                "summary": "Get LegalEntity",
                "description": "Get a specific LegalEntity.",
                "operationId": "GetLegalEntity",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "shop_account id"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "summary": "Delete LegalEntity",
                "description": "Delete a specific LegalEntity.",
                "operationId": "DeleteLegalEntity",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "shop_account id"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "summary": "Update LegalEntity",
                "description": "Update a specific LegalEntity.",
                "operationId": "UpdateLegalEntity",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "shop_account id"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "\/legal_entities\/{legal_entity_id}\/peppol_identifiers": {
            "post": {
                "summary": "Create a new PeppolIdentifier",
                "description": "Create a new PeppolIdentifier.",
                "operationId": "CreatePeppolIdentifier",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "legal_entity_id",
                        "in": "path",
                        "description": "The id of the LegalEntity for which to create the PeppolIdentifier"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "\/legal_entities\/{legal_entity_id}\/peppol_identifiers\/{superscheme}\/{scheme}\/{identifier}": {
            "delete": {
                "summary": "Delete PeppolIdentifier",
                "description": "Delete a PeppolIdentifier.",
                "operationId": "DeletePeppolIdentifier",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "legal_entity_id",
                        "in": "path",
                        "description": "The id of the LegalEntity for which to create the PeppolIdentifier"
                    },
                    {
                        "name": "superscheme",
                        "in": "path",
                        "description": "The superscheme of the identifier. Should always be \"iso6523-actorid-upis\"."
                    },
                    {
                        "name": "scheme",
                        "in": "path",
                        "description": "PEPPOL identifier scheme id, e.g. \"DE:VAT\". For a full list see <<peppol_schemes_list>>."
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "PEPPOL identifier"
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "\/purchase_invoices\/{guid}\/{packaging}\/{package_version}": {
            "get": {
                "summary": "Get Purchase invoice data",
                "description": "Get a specific Invoice.",
                "operationId": "GetInvoiceUbl",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "guid",
                        "in": "path",
                        "description": "purchase invoice guid"
                    },
                    {
                        "name": "packaging",
                        "in": "path",
                        "description": "How to package the purchase invoice. Use \"json\" or \"ubl\" "
                    },
                    {
                        "name": "package_version",
                        "in": "path",
                        "description": "The version of the ubl package (ignored for packaging \"json\")."
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Logos": {
                "type": "object",
                "properties": {
                    "thumb": {
                        "description": "",
                        "type": "string"
                    },
                    "small": {
                        "description": "",
                        "type": "string"
                    },
                    "medium": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "LegalEntityIdentifier": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "description": "",
                        "type": "string"
                    },
                    "scheme": {
                        "description": "",
                        "type": "string"
                    },
                    "scheme_agency": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "LegalEntityShop": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "line1": {
                        "description": "",
                        "type": "string"
                    },
                    "line2": {
                        "description": "",
                        "type": "string"
                    },
                    "zip": {
                        "description": "",
                        "type": "string"
                    },
                    "city": {
                        "description": "",
                        "type": "string"
                    },
                    "county": {
                        "description": "",
                        "type": "string"
                    },
                    "country": {
                        "description": "",
                        "type": "string"
                    },
                    "identifiers": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "identifiers": {
                "type": "array"
            },
            "Shop": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "purpose": {
                        "description": "The purpose of the shop. Either \"invoice\" or \"statement\"",
                        "type": "string"
                    },
                    "Logos": {
                        "description": "",
                        "type": "object"
                    },
                    "logo": {
                        "description": "",
                        "type": ""
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "legal_entities": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "legal_entities": {
                "type": "array"
            },
            "ShopAccountResult": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "username": {
                        "description": "See <<_openapi_shopaccountinput>>.",
                        "type": "string"
                    },
                    "external_user_id": {
                        "description": "See <<_openapi_shopaccountinput>>.",
                        "type": "string"
                    },
                    "email": {
                        "description": "DEPRECATED",
                        "type": "string"
                    },
                    "from_date": {
                        "description": "The date from invoices will be collected. This field defaults to the first day of the month\n                         the ShopAccount was created in.",
                        "type": "string"
                    },
                    "sign_in_error_confirmed": {
                        "description": "Whether or not Storecove has detected and confirmed a sign-in failure. This field is reset\n                         to false each time a ShopAccount is updated and the username or password has changed.",
                        "type": "boolean"
                    },
                    "sign_in_error_confirmed_at": {
                        "description": "The date on which the sign-in error was confirmed.",
                        "type": "string"
                    },
                    "Shop": {
                        "description": "",
                        "type": "object"
                    },
                    "shop": {
                        "description": "See <<_openapi_shopaccountinput>>.",
                        "type": ""
                    }
                }
            },
            "ShopAccountInput": {
                "type": "object",
                "properties": {
                    "username": {
                        "description": "See <<_openapi_shopaccountinput>>.",
                        "type": "string"
                    },
                    "password": {
                        "description": "The password for the account.",
                        "type": "string"
                    },
                    "external_user_id": {
                        "description": "See <<_openapi_shopaccountinput>>.",
                        "type": "string"
                    },
                    "email": {
                        "description": "DEPRECATED",
                        "type": "string"
                    },
                    "shop_id": {
                        "description": "The id of the Shop the account is for.",
                        "type": "integer"
                    }
                }
            },
            "ShopAccountUpdate": {
                "type": "object",
                "properties": {
                    "username": {
                        "description": "See <<_openapi_shopaccountinput>>.",
                        "type": "string"
                    },
                    "password": {
                        "description": "The password for the account.",
                        "type": "string"
                    },
                    "email": {
                        "description": "DEPRECATED",
                        "type": "string"
                    }
                }
            },
            "ShopAccountRequestResult": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "username": {
                        "description": "See <<_openapi_shopaccountinput>>.",
                        "type": "string"
                    },
                    "external_user_id": {
                        "description": "See <<_openapi_shopaccountinput>>.",
                        "type": "string"
                    },
                    "request_name": {
                        "description": "",
                        "type": "string"
                    },
                    "request_url": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "ShopAccountRequestInput": {
                "type": "object",
                "properties": {
                    "username": {
                        "description": "See <<_openapi_shopaccountinput>>.",
                        "type": "string"
                    },
                    "password": {
                        "description": "The password for the account.",
                        "type": "string"
                    },
                    "external_user_id": {
                        "description": "See <<_openapi_shopaccountinput>>.",
                        "type": "string"
                    },
                    "request_name": {
                        "description": "",
                        "type": "string"
                    },
                    "request_url": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "ShopAccountRequestUpdate": {
                "type": "object",
                "properties": {
                    "username": {
                        "description": "See <<_openapi_shopaccountinput>>.",
                        "type": "string"
                    },
                    "password": {
                        "description": "The password for the account.",
                        "type": "string"
                    },
                    "request_name": {
                        "description": "",
                        "type": "string"
                    },
                    "request_url": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "LegalEntityUpdate": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "party_name": {
                        "description": "The name of the company.",
                        "type": "string"
                    },
                    "line1": {
                        "description": "",
                        "type": "string"
                    },
                    "line2": {
                        "description": "",
                        "type": "string"
                    },
                    "city": {
                        "description": "",
                        "type": "string"
                    },
                    "zip": {
                        "description": "",
                        "type": "string"
                    },
                    "county": {
                        "description": "",
                        "type": "string"
                    },
                    "country": {
                        "description": "",
                        "type": ""
                    },
                    "tenant_id": {
                        "description": "The id of the tenant, to be used in case of multi-tenant solutions. This property will included in webhook events.",
                        "type": "string"
                    }
                }
            },
            "country": {
                "type": "object"
            },
            "LegalEntityCreate": {
                "type": "object",
                "properties": {
                    "party_name": {
                        "description": "The name of the company.",
                        "type": "string"
                    },
                    "line1": {
                        "description": "",
                        "type": "string"
                    },
                    "line2": {
                        "description": "",
                        "type": "string"
                    },
                    "city": {
                        "description": "",
                        "type": "string"
                    },
                    "zip": {
                        "description": "",
                        "type": "string"
                    },
                    "county": {
                        "description": "",
                        "type": "string"
                    },
                    "country": {
                        "description": "",
                        "type": ""
                    },
                    "tenant_id": {
                        "description": "The id of the tenant, to be used in case of multi-tenant solutions. This property will included in webhook events.",
                        "type": "string"
                    }
                }
            },
            "LegalEntity": {
                "type": "object"
            },
            "PeppolIdentifier": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "description": "",
                        "type": "string"
                    },
                    "scheme": {
                        "description": "",
                        "type": "string"
                    },
                    "superscheme": {
                        "description": "The superscheme of the identifier. Should always be \"iso6523-actorid-upis\".",
                        "type": "string"
                    }
                }
            },
            "PeppolIdentifierCreate": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "description": "",
                        "type": "string"
                    },
                    "scheme": {
                        "description": "",
                        "type": "string"
                    },
                    "superscheme": {
                        "description": "The superscheme of the identifier. Should always be \"iso6523-actorid-upis\".",
                        "type": "string"
                    }
                }
            },
            "PurchaseInvoiceUbl": {
                "type": "object",
                "properties": {
                    "guid": {
                        "description": "The GUID of the invoice",
                        "type": "string"
                    },
                    "legal_entity_id": {
                        "description": "The id of the LegalEntity the invoice was received for.",
                        "type": "integer"
                    },
                    "external_user_id": {
                        "description": "See <<_openapi_shopaccountinput>>.",
                        "type": "string"
                    },
                    "external_key": {
                        "description": "Used for accountants. The id you specified for the organization.",
                        "type": "string"
                    },
                    "ubl": {
                        "description": "The Base64 encoded UBL invoice.",
                        "type": "string"
                    }
                }
            },
            "PurchaseInvoice": {
                "type": "object",
                "properties": {
                    "guid": {
                        "description": "The GUID of the invoice",
                        "type": "string"
                    },
                    "legal_entity_id": {
                        "description": "The id of the LegalEntity the invoice was received for.",
                        "type": "integer"
                    },
                    "external_user_id": {
                        "description": "See <<_openapi_shopaccountinput>>.",
                        "type": "string"
                    },
                    "external_key": {
                        "description": "Used for accountants. The id you specified for the organization.",
                        "type": "string"
                    },
                    "document": {
                        "description": "The Base64 encoded PDF document associated with the invoice.",
                        "type": "string"
                    },
                    "invoice_number": {
                        "description": "The invoicenumber.",
                        "type": "string"
                    },
                    "issue_date": {
                        "description": "The date the invoice was issued. Format \"YYYY-MM-DD\".",
                        "type": "string"
                    },
                    "tax_point_date": {
                        "description": "The date the invoice was issued for tax purposes. In most countries MUST match the issue_date. Format \"YYYY-MM-DD\".",
                        "type": "string"
                    },
                    "due_date": {
                        "description": "The date the invoice must be payed by. Format \"YYYY-MM-DD\".",
                        "type": "string"
                    },
                    "document_currency_code": {
                        "description": "The ISO 4217 currency for the invoice.",
                        "type": "string"
                    },
                    "vat_reverse_charge": {
                        "description": "Whether or not the invoice is reverse charged.",
                        "type": "boolean"
                    },
                    "amount_including_vat": {
                        "description": "The total invoice amount payable, including VAT. This is equal to the sum of the invoice_lines (amount_excluding_vat + vat.amount)",
                        "type": "number"
                    },
                    "allowance_charge": {
                        "description": "A correction on the amount to pay, for instance if the invoice has been prepaid, in which case it will be negative.",
                        "type": "number"
                    },
                    "payable_rounding_amount": {
                        "description": "The difference between the invoice total and the sum of the invoice lines.",
                        "type": "number"
                    },
                    "prepaid_amount": {
                        "description": "The amount already paid.",
                        "type": "number"
                    },
                    "payable_amount": {
                        "description": "The total invoice amount payable including VAT. This is equal to amount_including_vat + allowance_charge + payable_rounding_amount. This property is redundant and provided only to make invoice processing more easy. You can also choose to only store this property, instead of the underlying fields.",
                        "type": "number"
                    },
                    "source": {
                        "description": "The source the invoice was received from.",
                        "type": "string"
                    },
                    "sender": {
                        "description": "Reference",
                        "type": "object"
                    },
                    "invoice_type": {
                        "description": "The type of invoice.",
                        "type": "string"
                    },
                    "period_start": {
                        "description": "The start date of the period this invoice relates to. Format \"YYYY-MM-DD\".",
                        "type": "string"
                    },
                    "period_end": {
                        "description": "The end date of the period this invoice relates to. Format \"YYYY-MM-DD\".",
                        "type": "string"
                    },
                    "buyer_reference": {
                        "description": "The end date of the period this invoice relates to. Format \"YYYY-MM-DD\".",
                        "type": "string"
                    },
                    "billing_reference": {
                        "description": "The end date of the period this invoice relates to. Format \"YYYY-MM-DD\".",
                        "type": "string"
                    },
                    "contract_document_reference": {
                        "description": "The end date of the period this invoice relates to. Format \"YYYY-MM-DD\".",
                        "type": "string"
                    },
                    "invoice_lines": {
                        "description": "",
                        "type": "array"
                    },
                    "accounting": {
                        "description": "Reference",
                        "type": "object"
                    },
                    "payment_means": {
                        "description": "How the invoice can be paid.",
                        "type": "object"
                    }
                }
            },
            "sender": {
                "type": "object"
            },
            "invoice_lines": {
                "type": "array"
            },
            "accounting": {
                "type": "object"
            },
            "payment_means": {
                "type": "object"
            },
            "PurchaseInvoiceAccountingDetails": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "The the code of the general ledger account.",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "list": {
                        "description": "The name of the list for the code, e.g. \"RGS\".",
                        "type": "string"
                    },
                    "list_version": {
                        "description": "The version of the list for the code, e.g. \"1.1\".",
                        "type": "string"
                    }
                }
            },
            "PurchaseInvoiceSender": {
                "type": "object",
                "properties": {
                    "party_name": {
                        "description": "The name of the company.",
                        "type": "string"
                    },
                    "department": {
                        "description": "The department who sent the invoice.",
                        "type": "string"
                    },
                    "line1": {
                        "description": "",
                        "type": "string"
                    },
                    "line2": {
                        "description": "",
                        "type": "string"
                    },
                    "zip": {
                        "description": "",
                        "type": "string"
                    },
                    "city": {
                        "description": "",
                        "type": "string"
                    },
                    "county": {
                        "description": "",
                        "type": "string"
                    },
                    "country": {
                        "description": "",
                        "type": "string"
                    },
                    "billing_contact": {
                        "description": "Reference",
                        "type": "object"
                    },
                    "peppol_identifiers": {
                        "description": "",
                        "type": "array"
                    }
                }
            },
            "billing_contact": {
                "type": "object"
            },
            "peppol_identifiers": {
                "type": "array"
            },
            "PurchaseInvoiceSenderBillingContact": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "description": "The first name of the billing contact.",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "The last name of the billing contact.",
                        "type": "string"
                    },
                    "email": {
                        "description": "DEPRECATED",
                        "type": "string"
                    }
                }
            },
            "PurchaseInvoiceInvoiceLine": {
                "type": "object",
                "properties": {
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "price_amount": {
                        "description": "The price for one item, excluding VAT.",
                        "type": "number"
                    },
                    "quantity": {
                        "description": "The quantity of the item.",
                        "type": "number"
                    },
                    "allowance_charge": {
                        "description": "A correction on the amount to pay, for instance if the invoice has been prepaid, in which case it will be negative.",
                        "type": "number"
                    },
                    "amount_excluding_vat": {
                        "description": "The amount excluding VAT. This is equal to quantity x price_amount + allowance_charge. This property is redundant and provided only to make invoice processing more easy. You can also choose to only store this property, instead of the underlying fields.",
                        "type": "number"
                    },
                    "vat": {
                        "description": "The VAT details for the invoice line.",
                        "type": "object"
                    },
                    "PurchaseInvoiceAccountingDetails": {
                        "description": "",
                        "type": "object"
                    },
                    "accounting": {
                        "description": "Reference",
                        "type": "object"
                    }
                }
            },
            "vat": {
                "type": "object"
            },
            "ErrorModel": {
                "type": "object",
                "properties": {
                    "source": {
                        "description": "The source the invoice was received from.",
                        "type": "string"
                    },
                    "details": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "AccountingCostCode": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "The the code of the general ledger account.",
                        "type": "string"
                    },
                    "list": {
                        "description": "The name of the list for the code, e.g. \"RGS\".",
                        "type": "string"
                    },
                    "listVersion": {
                        "description": "The version of the list of codes.",
                        "type": "string"
                    },
                    "listAgency": {
                        "description": "An agency that maintains one or more lists of codes.",
                        "type": "string"
                    }
                }
            },
            "Tax": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "The amount of VAT. Mandatory if taxSystem == 'tax_line_amounts'.",
                        "type": "number"
                    },
                    "percentage": {
                        "description": "The percentage VAT. This should be a valid VAT percentage in the country at the time of the issueDate of this invoice. Mandatory if taxSystem == 'line_amount_percentages",
                        "type": "number"
                    },
                    "country": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "Attachment": {
                "type": "object",
                "properties": {
                    "document": {
                        "description": "The Base64 encoded PDF document associated with the invoice.",
                        "type": "string"
                    },
                    "mimeType": {
                        "description": "The document attachment mime type. Currently only application\/pdf is allowed.",
                        "type": "string"
                    },
                    "filename": {
                        "description": "The name of the file attachment.",
                        "type": "string"
                    },
                    "primaryImage": {
                        "description": "Whether or not this document is a visual representation of the invoice data.",
                        "type": "boolean"
                    }
                }
            },
            "InvoiceSubmissionResult": {
                "type": "object",
                "properties": {
                    "guid": {
                        "description": "The GUID of the invoice",
                        "type": "string"
                    }
                }
            },
            "PreflightInvoiceRecipientResult": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "The the code of the general ledger account.",
                        "type": "string"
                    }
                }
            },
            "InvoiceSubmission": {
                "type": "object",
                "properties": {
                    "mode": {
                        "description": "DEPRECATED.",
                        "type": "string"
                    },
                    "supplierId": {
                        "description": "DEPRECATED.",
                        "type": "integer"
                    },
                    "legalSupplierId": {
                        "description": "DEPRECATED. Use legalEntityId",
                        "type": "integer"
                    },
                    "legalEntityId": {
                        "description": "The id of the LegalEntity this invoice should be sent for.",
                        "type": "integer"
                    },
                    "invoiceRecipient": {
                        "description": "",
                        "type": ""
                    },
                    "attachments": {
                        "description": "An array of attachments. You may provide up to 10 attchments, but the total size must not exceed 10MB after Base64 encoding.",
                        "type": "array"
                    },
                    "document": {
                        "description": "The Base64 encoded PDF document associated with the invoice.",
                        "type": "string"
                    },
                    "documentUrl": {
                        "description": "DEPRECATED. Use attachments.",
                        "type": "string"
                    },
                    "invoice": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "invoiceRecipient": {
                "type": "object",
                "properties": {
                    "publicIdentifiers": {
                        "description": "The public identifiers for this invoice recipient. These are the identifiers used on the Peppol network. Note that when sending invoices with VAT (or with a taxExemptReason), a receiver VAT number is required and that should be one of these publicIdentifiers. Only within the NL legal domain is it allowed to send invoices with VAT but without a VAT number.",
                        "type": ""
                    },
                    "emails": {
                        "description": "The email addresses the invoice should be sent to if none of the other identifiers can be used",
                        "type": "array"
                    }
                }
            },
            "attachments": {
                "type": "array"
            },
            "invoice": {
                "type": "object",
                "properties": {
                    "ublExtensions": {
                        "description": "An array of ubl extensions.",
                        "type": "array"
                    },
                    "taxSystem": {
                        "description": "The tax system used for the invoice. The system 'tax_line_percentages' is preferred, but for historic purposes 'tax_line_amounts is supported and default. Since not all invoice formats that we are required to send support 'tax_line_amounts' we will need to convert the invoice to the 'tax_line_percentags' system if we are forced to send the invoice in that tax system.",
                        "type": "string"
                    },
                    "documentCurrencyCode": {
                        "description": "The documentCurrencyCode is the currency for the entire invoice. We currently do not support invoices in multiple currencies. If left out, will default to EUR",
                        "type": ""
                    },
                    "invoiceNumber": {
                        "description": "The invoice number you assigned to the invoice. The invoiceNumber should be unique for the legalEntityId and year of the issueDate. This means invoice numbers can be reused in different years, as is customary in some countries.",
                        "type": "string"
                    },
                    "issueDate": {
                        "description": "Format: yyyy-mm-dd.",
                        "type": "string"
                    },
                    "vatReverseCharge": {
                        "description": "DEPRECTATED. Use taxExemptReason.",
                        "type": "boolean"
                    },
                    "taxExemptReason": {
                        "description": "The reason no tax is present on the invoice. allowed: export, reverse_charge, zero_rated. Note that this is an invoice level field and you cannot currently specify it per invoice line.",
                        "type": "string"
                    },
                    "accountingSupplierParty": {
                        "description": "The party sending the invoice. Most data for the AccountingSupplierParty is taken from the Storecove database, where your sender identity resides and has been validated. However, we provide a limited number of fields (mainly contact fields) here that you can specify on an invoice-by-invoice basis. Contact us if you want to use this feature.",
                        "type": ""
                    },
                    "accountingCustomerParty": {
                        "description": "The party the invoice is sent to.",
                        "type": ""
                    },
                    "buyerCustomerParty": {
                        "description": "The buyer party.",
                        "type": ""
                    },
                    "note": {
                        "description": "A note to add to the invoice",
                        "type": "string"
                    },
                    "delivery": {
                        "description": "The delivery of the invoice.",
                        "type": ""
                    },
                    "allowanceCharges": {
                        "description": "An array of allowance charges.",
                        "type": "array"
                    },
                    "invoiceLines": {
                        "description": "An array of invoice lines.",
                        "type": "array"
                    },
                    "taxSubtotals": {
                        "description": "An array of tax subtotals. This element is mandatory for taxSystem 'tax_line_percentages'.",
                        "type": "array"
                    },
                    "prepaidAmount": {
                        "description": "The amount already paid.",
                        "type": "number"
                    },
                    "accountingCost": {
                        "description": "DEPRECATED. Use accountingCostCode. The buyer's accounting cost centre for this invoice, expressed as text.",
                        "type": "string"
                    },
                    "AccountingCostCode": {
                        "description": "The code in the chart of accounts used by the receiver of the invoice.",
                        "type": "object"
                    },
                    "accountingCostCode": {
                        "description": "",
                        "type": ""
                    },
                    "dueDate": {
                        "description": "Format: yyyy-mm-dd.",
                        "type": "string"
                    },
                    "invoiceType": {
                        "description": "Do not use. This field is available for legacy reasons only. If you want to send a regular invoice (aka UBL type '380'), make sure you have a positive invoice amount. For a credit note (aka UBL type '381'), simply provide a negative invoice amount. If you, in addition to a negative invoice amount, also specify a billingReferences, your invoice will become a corrective invoice (aka UBL type '384'). If your invoice is not sent in the UBL syntax, Storecove will provide the appropriate type for the syntax the invoice is sent in.",
                        "type": "string"
                    },
                    "taxPointDate": {
                        "description": "The tax date is the date on which the supply of goods or of services was made or completed or the date on which the payment on account was made insofar as that date can be determined and differs from the date of the issue of the invoice. EU 2006-112 Article 226 Point 7. Note: For the Dutch TAX authorities the tac date should be the same as the issue date.",
                        "type": "string"
                    },
                    "buyerReference": {
                        "description": "A reference provided by the buyer used for internal routing of the document.",
                        "type": "string"
                    },
                    "invoicePeriod": {
                        "description": "The period (or specific date) to which the invoice applies. Format: yyyy-mm-dd - yyyy-mm-dd.",
                        "type": "string"
                    },
                    "orderReference": {
                        "description": "A reference to an order for this invoice, assigned by the buyer. Note that this often is a key field, since many receivers of invoices will use this field to automatically match the invoice to an order they placed. Many receivers refuse invoices that cannot be automatically matched, in particular government agencies. So it is highly recommended to fill this field whenever possible.",
                        "type": "string"
                    },
                    "salesOrderId": {
                        "description": "A reference to an order for this invoice, assigned by the seller.",
                        "type": "string"
                    },
                    "billingReference": {
                        "description": "A reference to a commercial invoice or corrective invoice of which the current invoice is a correction. This field is mandatory when sending invoiceType 384.",
                        "type": "string"
                    },
                    "contractDocumentReference": {
                        "description": "A reference to a contract or framework agreement that this invoice relates to.",
                        "type": "string"
                    },
                    "projectReference": {
                        "description": "Information about the project this invoice relates to.",
                        "type": "string"
                    },
                    "paymentMeansIban": {
                        "description": "The IBAN the amount payable should be transferred to",
                        "type": "string"
                    },
                    "paymentMeansCode": {
                        "description": "How the invoice has been \/ will be paid. Use only online_payment_service (payment will be made or has been made by an online payment service), bank_card (e.g. debit card, credit card), direct_debit (the amount has been \/ will be taken out of the client's bank account), standing_agreement (an unspecified payment means known to both buyer and seller) or credit_transfer (the buyer will do \/ has done a bank transfer). The numeric codes are for legacy purposes, they should not be used.",
                        "type": "string"
                    },
                    "paymentMeansPaymentId": {
                        "description": "The payment id that you will use to match the payment against the invoice.",
                        "type": "string"
                    },
                    "amountIncludingVat": {
                        "description": "amountIncludingVat is important because of rounding differences. In many invoices, the sum of the line item amounts excluding VAT and the VAT amounts is not equal to first summing the line items without VAT, and then applying VAT. The difference is automatically calculated and included in the electronic invoice, so the receiving accounting package can process the electronic invoice without problems.",
                        "type": "number"
                    }
                }
            },
            "ublExtensions": {
                "type": "array"
            },
            "documentCurrencyCode": {
                "type": "object"
            },
            "accountingSupplierParty": {
                "type": "object",
                "properties": {
                    "party": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "accountingCustomerParty": {
                "type": "object",
                "properties": {
                    "Party": {
                        "description": "A party that can receive or send invoices",
                        "type": "object"
                    },
                    "party": {
                        "description": "",
                        "type": ""
                    },
                    "accountId": {
                        "description": "The account id you assigned to the customer.",
                        "type": "string"
                    }
                }
            },
            "buyerCustomerParty": {
                "type": "object",
                "properties": {
                    "Party": {
                        "description": "A party that can receive or send invoices",
                        "type": "object"
                    },
                    "party": {
                        "description": "",
                        "type": ""
                    },
                    "accountId": {
                        "description": "The account id you assigned to the customer.",
                        "type": "string"
                    }
                }
            },
            "delivery": {
                "type": "object",
                "properties": {
                    "actualDate": {
                        "description": "The actual date of the delivery.",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "The quantity of the item.",
                        "type": "number"
                    },
                    "location": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "allowanceCharges": {
                "type": "array"
            },
            "invoiceLines": {
                "type": "array"
            },
            "taxSubtotals": {
                "type": "array"
            },
            "TaxSubtotal": {
                "type": "object",
                "properties": {
                    "taxableAmount": {
                        "description": "The amount on which the tax is levied.",
                        "type": "number"
                    },
                    "taxAmount": {
                        "description": "The amount of tax. Mandatory unless a taxExemptReason is provided.",
                        "type": "number"
                    },
                    "percentage": {
                        "description": "The percentage VAT. This should be a valid VAT percentage in the country at the time of the issueDate of this invoice. Mandatory if taxSystem == 'line_amount_percentages",
                        "type": "number"
                    },
                    "country": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "InvoiceLine": {
                "type": "object",
                "properties": {
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "invoicePeriod": {
                        "description": "The period (or specific date) to which the invoice applies. Format: yyyy-mm-dd - yyyy-mm-dd.",
                        "type": "string"
                    },
                    "itemPrice": {
                        "description": "The price per item (may be fractional)",
                        "type": "number"
                    },
                    "quantity": {
                        "description": "The quantity of the item.",
                        "type": "number"
                    },
                    "quantityUnitCode": {
                        "description": "A unit code from UNECE Rec20. The complete list can be found at http:\/\/www.datypic.com\/sc\/ubl20\/a-unitCode-4.html",
                        "type": "string"
                    },
                    "allowanceCharge": {
                        "description": "The discount or surcharge on this item. Should be negative for discounts",
                        "type": "number"
                    },
                    "amountExcludingVat": {
                        "description": "The amount excluding VAT. Should equal quantity x itemPrice + allowanceCharge.",
                        "type": "number"
                    },
                    "Tax": {
                        "description": "",
                        "type": "object"
                    },
                    "tax": {
                        "description": "The tax for this invoice line.",
                        "type": ""
                    },
                    "accountingCost": {
                        "description": "DEPRECATED. Use accountingCostCode. The buyer's accounting cost centre for this invoice, expressed as text.",
                        "type": "string"
                    },
                    "AccountingCostCode": {
                        "description": "The code in the chart of accounts used by the receiver of the invoice.",
                        "type": "object"
                    },
                    "accountingCostCode": {
                        "description": "",
                        "type": ""
                    },
                    "delivery": {
                        "description": "The delivery of the invoice.",
                        "type": ""
                    },
                    "additionalItemProperties": {
                        "description": "An array of additional item properties.",
                        "type": "array"
                    },
                    "sellersItemIdentification": {
                        "description": "The ID the seller assigned to this item.",
                        "type": "string"
                    },
                    "buyersItemIdentification": {
                        "description": "The ID the buyer assigned to this item.",
                        "type": "string"
                    },
                    "standardItemIdentification": {
                        "description": "Standardized ID for the item.",
                        "type": "string"
                    },
                    "standardItemIdentificationSchemeId": {
                        "description": "The scheme for the standardized ID for the item.",
                        "type": "string"
                    },
                    "standardItemIdentificationSchemeAgencyId": {
                        "description": "The scheme agency for the standardized ID for the item.",
                        "type": "string"
                    }
                }
            },
            "additionalItemProperties": {
                "type": "array"
            },
            "AdditionalItemProperty": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "The value of the property.",
                        "type": "string"
                    }
                }
            },
            "AllowanceCharge": {
                "type": "object",
                "properties": {
                    "amountExcludingVat": {
                        "description": "The amount excluding VAT. Should equal quantity x itemPrice + allowanceCharge.",
                        "type": "number"
                    },
                    "Tax": {
                        "description": "",
                        "type": "object"
                    },
                    "tax": {
                        "description": "The tax for this invoice line.",
                        "type": ""
                    },
                    "reason": {
                        "description": "The reason for the allowance or charge, free text",
                        "type": "string"
                    },
                    "reasonCode": {
                        "description": "Do not use. Contact Storecove first if you want to use this field.",
                        "type": "string"
                    }
                }
            },
            "Party": {
                "type": "object",
                "properties": {
                    "companyName": {
                        "description": "The name of the company receiving the invoice",
                        "type": "string"
                    },
                    "address": {
                        "description": "",
                        "type": ""
                    },
                    "contact": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "address": {
                "type": "object",
                "properties": {
                    "postbox": {
                        "description": "The postbox number",
                        "type": "string"
                    },
                    "department": {
                        "description": "The department who sent the invoice.",
                        "type": "string"
                    },
                    "street1": {
                        "description": "The street name. The number can be provided in this fiedl OR in the number field, but not in both.",
                        "type": "string"
                    },
                    "street2": {
                        "description": "The second street field. Use this if you used the first field for the building name.",
                        "type": "string"
                    },
                    "number": {
                        "description": "This number will be added to the street1 element. The number can be provided in this field OR in the street1 field, but not in both.",
                        "type": "string"
                    },
                    "city": {
                        "description": "",
                        "type": "string"
                    },
                    "zip": {
                        "description": "",
                        "type": "string"
                    },
                    "county": {
                        "description": "",
                        "type": "string"
                    },
                    "country": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "contact": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "description": "",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "",
                        "type": "string"
                    },
                    "email": {
                        "description": "DEPRECATED",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Only supported for AccountingSupplierParty.",
                        "type": "string"
                    }
                }
            },
            "party": {
                "type": "object"
            },
            "SupplierParty": {
                "type": "object",
                "properties": {
                    "contact": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "publicIdentifiers": {
                "type": "object"
            },
            "emails": {
                "type": "array"
            },
            "InvoiceRecipientPreflight": {
                "type": "object",
                "properties": {
                    "publicIdentifiers": {
                        "description": "The public identifiers for this invoice recipient. These are the identifiers used on the Peppol network. Note that when sending invoices with VAT (or with a taxExemptReason), a receiver VAT number is required and that should be one of these publicIdentifiers. Only within the NL legal domain is it allowed to send invoices with VAT but without a VAT number.",
                        "type": ""
                    }
                }
            },
            "PublicIdentifiers": {
                "type": "array"
            },
            "PublicIdentifier": {
                "type": "object",
                "properties": {
                    "scheme": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "The actual identifier.",
                        "type": "string"
                    }
                }
            },
            "location": {
                "type": "object"
            }
        }
    }
}